{"version":3,"sources":["app.js","directives.js","docs.js","errors.js","examples.js","search.js","tutorials.js","versions.js"],"names":["angular","module","config","$locationProvider","html5Mode","hashPrefix","directive","$anchorScroll","$location","scope","element","on","hash","$apply","restrict","terminal","compile","linenums","hasClass","match","exec","className","lang","html","window","prettyPrintOne","yOffset","controller","$scope","$rootScope","$window","$cookies","NG_PAGES","NG_NAVIGATION","NG_VERSION","docsVersion","isSnapshot","version","navClass","navItem","active","href","this","currentPage","path","current","nav-index-section","type","$on","pagePath","_gaq","push","$watch","replace","partialPath","currentArea","area","pathParts","split","breadcrumb","breadcrumbPath","forEach","part","name","url","versionNumber","full","codeName","loading","INDEX_PATH","test","filter","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","STACK_TRACE_REGEXP","truncate","text","nchars","length","substr","target","targetHtml","errorLinkFilter","interpolate","formatString","formatArgs","arguments","index","slice","link","attrs","i","search","errorDisplay","isDefined","apply","factory","$document","newWindow","fields","form","value","input","attr","append","find","submit","remove","COPYRIGHT","Date","getFullYear","COPYRIGHT_JS_CSS","COPYRIGHT_HTML","filename","lastIndexOf","$q","getExampleData","formPostData","createCopyrightNotice","bindToController","examplePath","controllerAs","template","ctrl","example","manifest","undefined","files","prepareExampleData","when","then","data","exampleNameParts","unshift","charAt","toUpperCase","join","open","clickEvent","ctrlKey","metaKey","postData","tags[0]","tags[1]","private","file","content","description","$http","exampleFolder","get","response","filePromises","transformResponse","all","docsSearch","clearResults","results","colClassName","hasResults","q","MIN_SEARCH_LENGTH","hits","api","guide","tutorial","error","misc","hit","limit","totalAreas","$$phase","result","hideResults","pop","provider","localSearchFactory","$timeout","console","log","lunr","ref","field","boost","indexReadyPromise","searchData","page","add","webWorkerSearchFactory","searchIndex","defer","worker","Worker","onmessage","oEvent","e","resolve","pages","d","map","promise","postMessage","$inject","$get","focus","focused","$eval","ESCAPE_KEY_KEYCODE","FORWARD_SLASH_KEYCODE","body","event","keyCode","document","activeElement","stopPropagation","preventDefault","seq","docTutorialNav","prev","next","diffLo","diffHi","addClass","step","NG_VERSIONS","docs_version","docs_versions","minor","NaN","isLatest","getGroupName","v","major","jumpToDocsVersion","currentPagePath","isOldDocsUrl","docsUrl","location"],"mappings":"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","file":"docs.min.js","sourcesContent":["angular.module('docsApp', [\n  'ngRoute',\n  'ngCookies',\n  'ngSanitize',\n  'ngAnimate',\n  'DocsController',\n  'versionsData',\n  'pagesData',\n  'navData',\n  'directives',\n  'errors',\n  'examples',\n  'search',\n  'tutorials',\n  'versions',\n  'bootstrap',\n  'ui.bootstrap.dropdown'\n])\n\n.config(['$locationProvider', function($locationProvider) {\n  $locationProvider.html5Mode(true).hashPrefix('!');\n}]);\n","angular.module('directives', [])\n\n/**\n * backToTop Directive\n * @param  {Function} $anchorScroll\n *\n * @description Ensure that the browser scrolls when the anchor is clicked\n */\n.directive('backToTop', ['$anchorScroll', '$location', function($anchorScroll, $location) {\n  return function link(scope, element) {\n    element.on('click', function(event) {\n      $location.hash('');\n      scope.$apply($anchorScroll);\n    });\n  };\n}])\n\n\n.directive('code', function() {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element) {\n      var linenums = element.hasClass('linenum');// || element.parent()[0].nodeName === 'PRE';\n      var match = /lang-(\\S+)/.exec(element[0].className);\n      var lang = match && match[1];\n      var html = element.html();\n      element.html(window.prettyPrintOne(html, lang, linenums));\n    }\n  };\n})\n\n.directive('scrollYOffsetElement', ['$anchorScroll', function($anchorScroll) {\n  return function(scope, element) {\n    $anchorScroll.yOffset = element;\n  };\n}]);\n","angular.module('DocsController', [])\n\n.controller('DocsController', [\n          '$scope', '$rootScope', '$location', '$window', '$cookies',\n              'NG_PAGES', 'NG_NAVIGATION', 'NG_VERSION',\n  function($scope, $rootScope, $location, $window, $cookies,\n              NG_PAGES, NG_NAVIGATION, NG_VERSION) {\n\n  $scope.docsVersion = NG_VERSION.isSnapshot ? 'snapshot' : NG_VERSION.version;\n\n  $scope.navClass = function(navItem) {\n    return {\n      active: navItem.href && this.currentPage && this.currentPage.path,\n      current: this.currentPage && this.currentPage.path === navItem.href,\n      'nav-index-section': navItem.type === 'section'\n    };\n  };\n\n\n\n  $scope.$on('$includeContentLoaded', function() {\n    var pagePath = $scope.currentPage ? $scope.currentPage.path : $location.path();\n    $window._gaq.push(['_trackPageview', pagePath]);\n  });\n\n  $scope.$watch(function docsPathWatch() {return $location.path(); }, function docsPathWatchAction(path) {\n\n    path = path.replace(/^\\/?(.+?)(\\/index)?\\/?$/, '$1');\n\n    currentPage = $scope.currentPage = NG_PAGES[path];\n\n    if ( currentPage ) {\n      $scope.partialPath = 'partials/' + path + '.html';\n      $scope.currentArea = NG_NAVIGATION[currentPage.area];\n      var pathParts = currentPage.path.split('/');\n      var breadcrumb = $scope.breadcrumb = [];\n      var breadcrumbPath = '';\n      angular.forEach(pathParts, function(part) {\n        breadcrumbPath += part;\n        breadcrumb.push({ name: (NG_PAGES[breadcrumbPath]&&NG_PAGES[breadcrumbPath].name) || part, url: breadcrumbPath });\n        breadcrumbPath += '/';\n      });\n    } else {\n      $scope.currentArea = NG_NAVIGATION['api'];\n      $scope.breadcrumb = [];\n      $scope.partialPath = 'Error404.html';\n    }\n  });\n\n  /**********************************\n   Initialize\n   ***********************************/\n\n  $scope.versionNumber = angular.version.full;\n  $scope.version = angular.version.full + \"  \" + angular.version.codeName;\n  $scope.loading = 0;\n\n\n  var INDEX_PATH = /^(\\/|\\/index[^\\.]*.html)$/;\n  if (!$location.path() || INDEX_PATH.test($location.path())) {\n    $location.path('/api').replace();\n  }\n\n}]);\n","angular.module('errors', ['ngSanitize'])\n\n.filter('errorLink', ['$sanitize', function ($sanitize) {\n  var LINKY_URL_REGEXP = /((ftp|https?):\\/\\/|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s\\.\\;\\,\\(\\)\\{\\}<>]/g,\n      MAILTO_REGEXP = /^mailto:/,\n      STACK_TRACE_REGEXP = /:\\d+:\\d+$/;\n\n  var truncate = function (text, nchars) {\n    if (text.length > nchars) {\n      return text.substr(0, nchars - 3) + '...';\n    }\n    return text;\n  };\n\n  return function (text, target) {\n    var targetHtml = target ? ' target=\"' + target + '\"' : '';\n\n    if (!text) return text;\n\n    return $sanitize(text.replace(LINKY_URL_REGEXP, function (url) {\n      if (STACK_TRACE_REGEXP.test(url)) {\n        return url;\n      }\n\n      // if we did not match ftp/http/mailto then assume mailto\n      if (!/^((ftp|https?):\\/\\/|mailto:)/.test(url)) url = 'mailto:' + url;\n\n      return '<a' + targetHtml + ' href=\"' + url +'\">' +\n                truncate(url.replace(MAILTO_REGEXP, ''), 60) +\n              '</a>';\n    }));\n  };\n}])\n\n\n.directive('errorDisplay', ['$location', 'errorLinkFilter', function ($location, errorLinkFilter) {\n  var interpolate = function (formatString) {\n    var formatArgs = arguments;\n    return formatString.replace(/\\{\\d+\\}/g, function (match) {\n      // Drop the braces and use the unary plus to convert to an integer.\n      // The index will be off by one because of the formatString.\n      var index = +match.slice(1, -1);\n      if (index + 1 >= formatArgs.length) {\n        return match;\n      }\n      return formatArgs[index+1];\n    });\n  };\n\n  return {\n    link: function (scope, element, attrs) {\n      var search = $location.search(),\n        formatArgs = [attrs.errorDisplay],\n        i;\n\n      for (i = 0; angular.isDefined(search['p'+i]); i++) {\n        formatArgs.push(search['p'+i]);\n      }\n      element.html(errorLinkFilter(interpolate.apply(null, formatArgs), '_blank'));\n    }\n  };\n}]);\n","angular.module('examples', [])\n\n.factory('formPostData', ['$document', function($document) {\n  return function(url, newWindow, fields) {\n    /**\n     * If the form posts to target=\"_blank\", pop-up blockers can cause it not to work.\n     * If a user choses to bypass pop-up blocker one time and click the link, they will arrive at\n     * a new default plnkr, not a plnkr with the desired template.  Given this undesired behavior,\n     * some may still want to open the plnk in a new window by opting-in via ctrl+click.  The\n     * newWindow param allows for this possibility.\n     */\n    var target = newWindow ? '_blank' : '_self';\n    var form = angular.element('<form style=\"display: none;\" method=\"post\" action=\"' + url + '\" target=\"' + target + '\"></form>');\n    angular.forEach(fields, function(value, name) {\n      var input = angular.element('<input type=\"hidden\" name=\"' +  name + '\">');\n      input.attr('value', value);\n      form.append(input);\n    });\n    $document.find('body').append(form);\n    form[0].submit();\n    form.remove();\n  };\n}])\n\n.factory('createCopyrightNotice', function() {\n    var COPYRIGHT = 'Copyright ' + (new Date()).getFullYear() + ' Google Inc. All Rights Reserved.\\n'\n     + 'Use of this source code is governed by an MIT-style license that\\n'\n     + 'can be found in the LICENSE file at http://angular.io/license';\n    var COPYRIGHT_JS_CSS = '\\n\\n/*\\n' + COPYRIGHT + '\\n*/';\n    var COPYRIGHT_HTML = '\\n\\n<!-- \\n' + COPYRIGHT + '\\n-->';\n\n    return function getCopyright(filename) {\n      switch (filename.substr(filename.lastIndexOf('.'))) {\n        case '.html':\n          return COPYRIGHT_HTML;\n        case '.js':\n        case '.css':\n          return COPYRIGHT_JS_CSS;\n        case '.md':\n          return COPYRIGHT;\n      }\n      return '';\n    };\n})\n\n.directive('plnkrOpener', ['$q', 'getExampleData', 'formPostData', 'createCopyrightNotice', function($q, getExampleData, formPostData, createCopyrightNotice) {\n  return {\n    scope: {},\n    bindToController: {\n      'examplePath': '@'\n    },\n    controllerAs: 'plnkr',\n    template: '<button ng-click=\"plnkr.open($event)\" class=\"btn pull-right\"> <i class=\"glyphicon glyphicon-edit\">&nbsp;</i> Edit in Plunker</button> ',\n    controller: [function() {\n      var ctrl = this;\n\n      ctrl.example = {\n        path: ctrl.examplePath,\n        manifest: undefined,\n        files: undefined,\n        name: 'AngularJS Example'\n      };\n\n      ctrl.prepareExampleData = function() {\n        if (ctrl.example.manifest) {\n          return $q.when(ctrl.example);\n        }\n\n        return getExampleData(ctrl.examplePath).then(function(data) {\n          ctrl.example.files = data.files;\n          ctrl.example.manifest = data.manifest;\n\n          // Build a pretty title for the Plunkr\n          var exampleNameParts = data.manifest.name.split('-');\n          exampleNameParts.unshift('AngularJS');\n          angular.forEach(exampleNameParts, function(part, index) {\n            exampleNameParts[index] = part.charAt(0).toUpperCase() + part.substr(1);\n          });\n          ctrl.example.name = exampleNameParts.join(' - ');\n\n          return ctrl.example;\n        });\n      };\n\n      ctrl.open = function(clickEvent) {\n\n        var newWindow = clickEvent.ctrlKey || clickEvent.metaKey;\n\n        var postData = {\n          'tags[0]': \"angularjs\",\n          'tags[1]': \"example\",\n          'private': true\n        };\n\n        // Make sure the example data is available.\n        // If an XHR must be made, this might break some pop-up blockers when\n        // new window is requested\n        ctrl.prepareExampleData()\n          .then(function() {\n            angular.forEach(ctrl.example.files, function(file) {\n              postData['files[' + file.name + ']'] = file.content + createCopyrightNotice(file.name);\n            });\n\n            postData.description = ctrl.example.name;\n\n            formPostData('http://plnkr.co/edit/?p=preview', newWindow, postData);\n          });\n\n      };\n\n      // Initialize the example data, so it's ready when clicking the open button.\n      // Otherwise pop-up blockers will prevent a new window from opening\n      ctrl.prepareExampleData(ctrl.example.path);\n\n    }]\n  };\n}])\n\n.factory('getExampleData', ['$http', '$q', function($http, $q) {\n  return function(exampleFolder){\n    // Load the manifest for the example\n    return $http.get(exampleFolder + '/manifest.json')\n      .then(function(response) {\n        return response.data;\n      })\n      .then(function(manifest) {\n        var filePromises = [];\n\n        angular.forEach(manifest.files, function(filename) {\n          filePromises.push($http.get(exampleFolder + '/' + filename, { transformResponse: [] })\n            .then(function(response) {\n\n              // The manifests provide the production index file but Plunkr wants\n              // a straight index.html\n              if (filename === \"index-production.html\") {\n                filename = \"index.html\";\n              }\n\n              return {\n                name: filename,\n                content: response.data\n              };\n            }));\n        });\n\n        return $q.all({\n          manifest: manifest,\n          files: $q.all(filePromises)\n        });\n      });\n  };\n}]);","angular.module('search', [])\n\n.controller('DocsSearchCtrl', ['$scope', '$location', 'docsSearch', function($scope, $location, docsSearch) {\n  function clearResults() {\n    $scope.results = [];\n    $scope.colClassName = null;\n    $scope.hasResults = false;\n  }\n\n  $scope.search = function(q) {\n    var MIN_SEARCH_LENGTH = 2;\n    if(q.length >= MIN_SEARCH_LENGTH) {\n      docsSearch(q).then(function(hits) {\n        // Make sure the areas are always in the same order\n        var results = {\n          api: [],\n          guide: [],\n          tutorial: [],\n          error: [],\n          misc: []\n        };\n\n        angular.forEach(hits, function(hit) {\n          var area = hit.area;\n\n          var limit = (area == 'api') ? 40 : 14;\n          results[area] = results[area] || [];\n          if(results[area].length < limit) {\n            results[area].push(hit);\n          }\n        });\n\n        var totalAreas = 0;\n        for(var i in results) {\n          ++totalAreas;\n        }\n        if(totalAreas > 0) {\n          $scope.colClassName = 'cols-' + totalAreas;\n        }\n        $scope.hasResults = totalAreas > 0;\n        $scope.results = results;\n      });\n    }\n    else {\n      clearResults();\n    }\n    if(!$scope.$$phase) $scope.$apply();\n  };\n\n  $scope.submit = function() {\n    var result;\n    if ($scope.results.api) {\n      result = $scope.results.api[0];\n    } else {\n      for(var i in $scope.results) {\n        result = $scope.results[i][0];\n        if(result) {\n          break;\n        }\n      }\n    }\n    if(result) {\n      $location.path(result.path);\n      $scope.hideResults();\n    }\n  };\n\n  $scope.hideResults = function() {\n    clearResults();\n    $scope.q = '';\n  };\n}])\n\n\n.controller('Error404SearchCtrl', ['$scope', '$location', 'docsSearch',\n        function($scope, $location, docsSearch) {\n  docsSearch($location.path().split(/[\\/\\.:]/).pop()).then(function(results) {\n    $scope.results = {};\n    angular.forEach(results, function(result) {\n      var area = $scope.results[result.area] || [];\n      area.push(result);\n      $scope.results[result.area] = area;\n    });\n  });\n}])\n\n\n.provider('docsSearch', function() {\n\n  // This version of the service builds the index in the current thread,\n  // which blocks rendering and other browser activities.\n  // It should only be used where the browser does not support WebWorkers\n  function localSearchFactory($http, $timeout, NG_PAGES) {\n\n    console.log('Using Local Search Index');\n\n    // Create the lunr index\n    var index = lunr(function() {\n      this.ref('path');\n      this.field('titleWords', {boost: 50});\n      this.field('members', { boost: 40});\n      this.field('keywords', { boost : 20 });\n    });\n\n    // Delay building the index by loading the data asynchronously\n    var indexReadyPromise = $http.get('js/search-data.json').then(function(response) {\n      var searchData = response.data;\n      // Delay building the index for 500ms to allow the page to render\n      return $timeout(function() {\n        // load the page data into the index\n        angular.forEach(searchData, function(page) {\n          index.add(page);\n        });\n      }, 500);\n    });\n\n    // The actual service is a function that takes a query string and\n    // returns a promise to the search results\n    // (In this case we just resolve the promise immediately as it is not\n    // inherently an async process)\n    return function(q) {\n      return indexReadyPromise.then(function() {\n        var hits = index.search(q);\n        var results = [];\n        angular.forEach(hits, function(hit) {\n          results.push(NG_PAGES[hit.ref]);\n        });\n        return results;\n      });\n    };\n  }\n  localSearchFactory.$inject = ['$http', '$timeout', 'NG_PAGES'];\n\n  // This version of the service builds the index in a WebWorker,\n  // which does not block rendering and other browser activities.\n  // It should only be used where the browser does support WebWorkers\n  function webWorkerSearchFactory($q, $rootScope, NG_PAGES) {\n\n    console.log('Using WebWorker Search Index')\n\n    var searchIndex = $q.defer();\n    var results;\n\n    var worker = new Worker('js/search-worker.js');\n\n    // The worker will send us a message in two situations:\n    // - when the index has been built, ready to run a query\n    // - when it has completed a search query and the results are available\n    worker.onmessage = function(oEvent) {\n      $rootScope.$apply(function() {\n\n        switch(oEvent.data.e) {\n          case 'index-ready':\n            searchIndex.resolve();\n            break;\n          case 'query-ready':\n            var pages = oEvent.data.d.map(function(path) {\n              return NG_PAGES[path];\n            });\n            results.resolve(pages);\n            break;\n        }\n      });\n    };\n\n    // The actual service is a function that takes a query string and\n    // returns a promise to the search results\n    return function(q) {\n\n      // We only run the query once the index is ready\n      return searchIndex.promise.then(function() {\n\n        results = $q.defer();\n        worker.postMessage({ q: q });\n        return results.promise;\n      });\n    };\n  }\n  webWorkerSearchFactory.$inject = ['$q', '$rootScope', 'NG_PAGES'];\n\n  return {\n    $get: window.Worker ? webWorkerSearchFactory : localSearchFactory\n  };\n})\n\n.directive('focused', function($timeout) {\n  return function(scope, element, attrs) {\n    element[0].focus();\n    element.on('focus', function() {\n      scope.$apply(attrs.focused + '=true');\n    });\n    element.on('blur', function() {\n      // have to use $timeout, so that we close the drop-down after the user clicks,\n      // otherwise when the user clicks we process the closing before we process the click.\n      $timeout(function() {\n        scope.$eval(attrs.focused + '=false');\n      });\n    });\n    scope.$eval(attrs.focused + '=true');\n  };\n})\n\n.directive('docsSearchInput', ['$document',function($document) {\n  return function(scope, element, attrs) {\n    var ESCAPE_KEY_KEYCODE = 27,\n        FORWARD_SLASH_KEYCODE = 191;\n    angular.element($document[0].body).on('keydown', function(event) {\n      var input = element[0];\n      if(event.keyCode == FORWARD_SLASH_KEYCODE && document.activeElement != input) {\n        event.stopPropagation();\n        event.preventDefault();\n        input.focus();\n      }\n    });\n\n    element.on('keydown', function(event) {\n      if(event.keyCode == ESCAPE_KEY_KEYCODE) {\n        event.stopPropagation();\n        event.preventDefault();\n        scope.$apply(function() {\n          scope.hideResults();\n        });\n      }\n    });\n  };\n}]);\n","angular.module('tutorials', [])\n\n.directive('docTutorialNav', function() {\n  var pages = [\n    '',\n    'step_00', 'step_01', 'step_02', 'step_03', 'step_04',\n    'step_05', 'step_06', 'step_07', 'step_08', 'step_09',\n    'step_10', 'step_11', 'step_12', 'the_end'\n  ];\n  return {\n    scope: {},\n    template:\n      '<a ng-href=\"tutorial/{{prev}}\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-step-backward\"></i> Previous</li></a>\\n' +\n      '<a ng-href=\"http://angular.github.io/angular-phonecat/step-{{seq}}/app\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-play\"></i> Live Demo</li></a>\\n' +\n      '<a ng-href=\"https://github.com/angular/angular-phonecat/compare/step-{{diffLo}}...step-{{diffHi}}\"><li class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-search\"></i> Code Diff</li></a>\\n' +\n      '<a ng-href=\"tutorial/{{next}}\"><li class=\"btn btn-primary\">Next <i class=\"glyphicon glyphicon-step-forward\"></i></li></a>',\n    link: function(scope, element, attrs) {\n      var seq = 1 * attrs.docTutorialNav;\n      scope.seq = seq;\n      scope.prev = pages[seq];\n      scope.next = pages[2 + seq];\n      scope.diffLo = seq ? (seq - 1): '0~1';\n      scope.diffHi = seq;\n\n      element.addClass('btn-group');\n      element.addClass('tutorial-nav');\n    }\n  };\n})\n\n\n.directive('docTutorialReset', function() {\n  return {\n    scope: {\n      'step': '@docTutorialReset'\n    },\n    template:\n      '<p><button class=\"btn\" ng-click=\"show=!show\">Workspace Reset Instructions  ➤</button></p>\\n' +\n      '<div class=\"alert alert-info\" ng-show=\"show\">\\n' +\n      '  <p>Reset the workspace to step {{step}}.</p>' +\n      '  <p><pre>git checkout -f step-{{step}}</pre></p>\\n' +\n      '  <p>Refresh your browser or check out this step online: '+\n          '<a href=\"http://angular.github.io/angular-phonecat/step-{{step}}/app\">Step {{step}} Live Demo</a>.</p>\\n' +\n      '</div>\\n' +\n      '<p>The most important changes are listed below. You can see the full diff on ' +\n        '<a ng-href=\"https://github.com/angular/angular-phonecat/compare/step-{{step ? (step - 1): \\'0~1\\'}}...step-{{step}}\" title=\"See diff on Github\">GitHub</a>\\n' +\n      '</p>'\n  };\n});","\"use strict\";\n\nangular.module('versions', [])\n\n.controller('DocsVersionsCtrl', ['$scope', '$location', '$window', 'NG_VERSIONS', function($scope, $location, $window, NG_VERSIONS) {\n  $scope.docs_version  = NG_VERSIONS[0];\n  $scope.docs_versions = NG_VERSIONS;\n\n  for(var i=0, minor = NaN; i < NG_VERSIONS.length; i++) {\n    var version = NG_VERSIONS[i];\n    // NaN will give false here\n    if (minor <= version.minor) {\n      continue;\n    }\n    version.isLatest = true;\n    minor = version.minor;\n  }\n\n  $scope.getGroupName = function(v) {\n    return v.isLatest ? 'Latest' : ('v' + v.major + '.' + v.minor + '.x');\n  };\n\n  $scope.jumpToDocsVersion = function(version) {\n    var currentPagePath = $location.path().replace(/\\/$/, ''),\n        url = '';\n    if (version.isOldDocsUrl) {\n      url = version.docsUrl;\n    }else{\n      url = version.docsUrl + currentPagePath;\n    }\n    $window.location = url;\n  };\n}]);\n"],"sourceRoot":"/source/"}